@page "/editproduct"
@using Bulk.Domain.Entities
@using Bulk.Model.Products
@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@attribute [RequireAntiforgeryToken(required: false)]
@attribute [Authorize(Roles = "Admin, SuperAdmin")]

<h3>Edit Product</h3>

<EditForm Model="@Product" OnValidSubmit="@HandleRegistration" FormName="Create">
    <AntiforgeryToken />
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Product Id:</label>
        <InputNumber id="name" class="form-control" @bind-Value="@Product.Id" />
        <ValidationMessage For="@(() => Product.Name)" />
    </div>

    <div class="form-group">
        <label for="name">Product Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@Product.Name" />
        <ValidationMessage For="@(() => Product.Name)" />
    </div>

    <div class="form-group">
        <label for="desc">Description:</label>
        <InputText id="desc" class="form-control" @bind-Value="@Product.Description" />
        <ValidationMessage For="@(() => Product.Name)" />
    </div>

    <div class="form-group">
        <label for="category">Category Id:</label>
        <InputNumber id="category" class="form-control" @bind-Value="@Product.CategoryId" />
        <ValidationMessage For="@(() => Product.CategoryId)" />
    </div>

    <div class="form-group">
        <label for="name">Count:</label>
        <InputNumber id="name" class="form-control" @bind-Value="@Product.Count" />
        <ValidationMessage For="@(() => Product.Count)" />
    </div>

    <button type="submit" class="btn btn-primary">Edit</button>
    <AntiforgeryToken />
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p>@errorMessage</p>
}

@code {
    [SupplyParameterFromForm]
    ProductUpdateModel Product { get; set; } = new();

    private string errorMessage { get; set; }

    private async Task HandleRegistration()
    {
        using(var client = new HttpClient())
        {
            try
            {
                client.BaseAddress = new Uri("https://localhost:7279/");
                var response = await client.PostAsJsonAsync($"api/products/update={Product.Id}", Product);
                response.EnsureSuccessStatusCode();
            }
            catch (Exception ex)
            {
                errorMessage = "Something is wrong";
            }
            if(errorMessage == null)
            {
                NavigationManager.NavigateTo("/products");
            }
        }
    }
}
